version: '3.8'

networks:
  backend:
    driver: ${NETWORKS_DRIVER}
volumes:
  percona:
    driver: ${VOLUMES_DRIVER}
  postgres:
    driver: ${VOLUMES_DRIVER}
services:
  percona:
    build:
      context: ./docker/percona
      args:
        - PERCONA_VERSION=${PERCONA_VERSION}
    container_name: percona
    restart: always
    environment:
      - MYSQL_DATABASE=${PERCONA_DATABASE}
      - MYSQL_USER=${PERCONA_USER}
      - MYSQL_PASSWORD=${PERCONA_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${PERCONA_ROOT_PASSWORD}
    volumes:
      - ./volume/data/mysql:/var/lib/mysql
      - ${PERCONA_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${PERCONA_PORT}:3306"
    networks:
      - backend
  postgres:
    build:
      context: ./docker/postgres
      args:
        - POSTGRES_VERSION=${POSTGRES_VERSION}
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./volume/data/postgres:/var/lib/postgresql/data
      - ${POSTGRES_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - backend
